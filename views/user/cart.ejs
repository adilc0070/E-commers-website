<!-- Assuming your cart.ejs is similar to this -->

<%- include ('../user/layout/header.ejs')%>
<%- include ('../user/layout/profileSideBar.ejs')%>


<div class="cart-table-area section-padding-100">
    <div class="container-fluid">
        <div class="row" id="cart">
            <div class="col-12 col-lg-8">
                <!-- ... (existing code) ... -->
                <div class="cart-table clearfix" >
                    <table class="table table-responsive">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (cartData && cartData.products && cartData.products.length > 0) { %>
                                <% cartData.products.forEach(product => { %>
                                    <tr>
                                        <td class="cart_product_img">
                                            <a href="#"><img src="/products/images/<%- product.productId.images.image1 %>" alt="Product"></a>
                                        </td>
                                        <td class="cart_product_desc">
                                            <h5><%= product.productId.product_name %></h5>
                                        </td>
                                        <td class="price">
                                            <span>₹<%= product.productId.price %></span>
                                        </td>
                                        <td class="qty">
                                            <div class="qty-btn d-flex">
                                                <div class="quantity">
                                                    <span class="qty-minus" onclick="updateQuantity(-1)"><i class="fa fa-caret-down" aria-hidden="true"></i></span>
                                                    <input type="number" class="qty-text" id="quantity-input-<%= product.productId %>" step="1" min="1" max="300" name="quantity" value="<%= product.count %>" onchange="updateQuantity(0)">
                                                    <span class="qty-plus" onclick="updateQuantity(1)"><i class="fa fa-caret-up" aria-hidden="true"></i></span>
                                                </div>
                                                
                                                
                                            </div>
                                        </td>
                                        <td class="price">
                                            <span>₹<%= product.productId.price * product.count %></span>
                                        </td>
                                        <td class="cart_delete">
                                            <a href="/delete-cart?id=<%=product.productId._id %>"><i class="fa fa-times" aria-hidden="true"></i></a>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="4">Your cart is empty.</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
             <% 
                // Calculate the cart total
                let cartTotal = 0;
                if (cartData && cartData.products && cartData.products.length > 0) {
                    cartData.products.forEach(product => {
                    cartTotal += product.productId.price * product.count;
                    });
                }

                // Calculate the delivery charge based on the cart total
                let deliveryCharge = (cartTotal < 1000) ? 67 : 0;

                // Calculate the total amount including the delivery charge
                let totalAmount = cartTotal + deliveryCharge;
                %>

                

            <div class="col-12 col-lg-4">
                <div class="cart-summary">
                    <h5>Cart Total</h5>
                    <ul class="summary-table">
                        <% if (cartData && cartData.products && cartData.products.length > 0) { %>
                        <li><span>Subtotal:</span> <span>$<%= cartTotal.toFixed(2) %></span></li>
                        <% } else { %>
                        <li><span>Subtotal:</span> <span>$0.00</span></li>
                        <% } %>
                        <li><span>Delivery:</span> <span>$<%= deliveryCharge.toFixed(2) %></span></li>
                        <li><span>Total:</span> <span>$<%= totalAmount.toFixed(2) %></span></li>
                    </ul>
                    <div class="cart-btn mt-100">
                        <a href="/checkout" class="btn amado-btn w-100">Checkout</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

        <script>
            function updateCount(val, productId) {
                $.ajax({
                    method: "post",
                    url: "/updateCartQuantity",
                    data: JSON.stringify({ id: productId, val: val }),
                    contentType: 'application/json',
                    success: function (response) {
                        if (response.result === true) {
                            $('#cart').load('/cart #cart');
                            $('#downCart').load('/cart #downCart');
                        } else if (response.result === 'stock_exceeded') {
                            // Show SweetAlert indicating the product quantity exceeds stock availability
                            Swal.fire({
                                title: 'Stock Exceeded',
                                text: 'The product quantity exceeds stock availability.',
                                icon: 'error',
                                confirmButtonText: 'OK',
                            });
                        } else if (response.result === false) {
                            // Show SweetAlert indicating the product is out of stock
                            Swal.fire({
                                title: 'Out of Stock',
                                text: 'This product is currently out of stock.',
                                icon: 'error',
                                confirmButtonText: 'OK',
                            });
                        } else if (response.result === 'quantity_below_1' && val === -1) {
                            // Show SweetAlert indicating the quantity cannot go below 1
                            Swal.fire({
                                title: 'Invalid Quantity',
                                text: 'The quantity cannot go below 1.',
                                icon: 'error',
                                confirmButtonText: 'OK',
                            });
                        }
                    }
                });
            }

            function updateQuantity(change, productId) {
                var inputElement = document.getElementById('quantity-input-' + productId);
                var currentQuantity = parseInt(inputElement.value);

                // Ensure the new quantity is within the specified range (min: 1, max: 300)
                var newQuantity = Math.min(300, Math.max(1, currentQuantity + change));

                // Update the input value
                inputElement.value = newQuantity;
            }
        </script>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<%- include ('../user/layout/footer.ejs')%>
